name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      API_URL: http://127.0.0.1:4010
      CONTRACT_OK: '123456'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      - name: List mocks folder (debug)
        run: |
          echo "PWD=$(pwd)"
          ls -la
          echo "Listing mocks/ :"
          ls -la mocks || true
          echo "Show first lines of mocks/openapi-billing.yml:"
          sed -n '1,40p' mocks/openapi-billing.yml || true

      - name: Debug mocks folder
        run: |
          ls -la mocks
          sed -n '1,30p' mocks/openapi-billing.yml

      - name: Start Prism mock (detached)
        run: |
          docker run -d --name prism \
            -p 4010:4010 \
            -v "${{ github.workspace }}/mocks:/work/mocks:ro" \
            stoplight/prism:4 \
            mock -h 0.0.0.0 -p 4010 /work/mocks/openapi-billing.yml
          docker ps -a

      - name: Wait for Prism to be ready (probe real endpoint)
        run: |
          # Espera a que el puerto estÃ© abierto
          for i in {1..60}; do
            if (echo > /dev/tcp/127.0.0.1/4010) >/dev/null 2>&1; then
              echo "Port 4010 is open"; break
            fi
            echo "Waiting for port 4010... ($i)"; sleep 1
          done

          # Ahora golpea un endpoint del spec; nos vale cualquier HTTP code != 000
          for i in {1..40}; do
            CODE=$(curl -s -o /dev/null -w "%{http_code}" \
              -H "Accept: application/json" \
              -H "Authorization: Bearer anything" \
              http://127.0.0.1:4010/12345/invoices)
            if [ "$CODE" != "000" ]; then
              echo "Prism answering on /12345/invoices with HTTP $CODE"; exit 0
            fi
            echo "Waiting for Prism HTTP response... ($i)"; sleep 2
          done

          echo "Prism not responding in time"; docker logs prism || true; exit 1

      - name: Run tests
        run: npm test

      - name: Always show Prism logs on failure
        if: failure()
        run: docker logs prism || true

      - name: Stop Prism
        if: always()
        run: docker rm -f prism || true
